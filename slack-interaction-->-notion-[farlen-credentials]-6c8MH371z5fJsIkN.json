{"createdAt":"2025-05-09T22:31:30.129Z","updatedAt":"2025-06-07T03:33:29.250Z","id":"6c8MH371z5fJsIkN","name":"Slack Interaction -> Notion [Farlen Credentials]","active":true,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[500,920],"id":"26e2cbd8-ab71-467b-a085-0c7d6029ae78","name":"When clicking ‘Test workflow’","disabled":true},{"parameters":{"content":"## Weekly: Pull Member Analytics Report from Slack \nMaybe this is a CSV \nMaybe we can get Slack to just connect directly in?\n\nExecute this every Friday AM \nDate Range: Last 7 days (Friday to Thursday)\nData to extract:\n- User's email address\n- User's name\n- Days active\n- Messages posted\n- Last Active\n ","height":560,"width":700},"type":"n8n-nodes-base.stickyNote","position":[-1800,-280],"typeVersion":1,"id":"7570bb35-bda9-4599-8498-ac9d50cf1692","name":"Sticky Note"},{"parameters":{"content":"## Map email address of each user to the Company Name \nAs in this sheet (Columns B & C) https://docs.google.com/spreadsheets/d/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M/edit?gid=0#gid=0\n\n\nAdd 2 new columns to sheet \nRow 1, Column 1: \"Days Acctive\"\nRow 1, Column 2: \"Messages Posted\"\nRow 2, Column 1: Today's Date \n\nAdd the metrics to the columns, matched to the user.","height":780,"width":1220},"type":"n8n-nodes-base.stickyNote","position":[-1060,-280],"typeVersion":1,"id":"b40727ab-d1c5-46e4-a8e8-742897352d4c","name":"Sticky Note1"},{"parameters":{"content":"## Where more than one user per Company Name \nKeep only the users with the highest \"Days Active\" meetrics","height":540,"width":420},"type":"n8n-nodes-base.stickyNote","position":[200,-300],"typeVersion":1,"id":"6f739e41-ea7a-4bd4-b02f-77d33f2e9c5b","name":"Sticky Note2"},{"parameters":{"content":"## Update Notion Database\n- Database: All Clients\n- Field: \"Slack Interact?\" -> Mark as checked","height":520,"width":400},"type":"n8n-nodes-base.stickyNote","position":[900,-240],"typeVersion":1,"id":"3b60a9b0-01f4-4525-bc83-1049cc66ae42","name":"Sticky Note3"},{"parameters":{"content":"## If/Then\nIf \"Days Active\" is >0\n\n(If =0, do nothing)","height":500},"type":"n8n-nodes-base.stickyNote","position":[640,-240],"typeVersion":1,"id":"c82e1822-23e8-4366-bc01-a0a40854f408","name":"Sticky Note4"},{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"triggerOn":"specificFolder","folderToWatch":{"__rl":true,"value":"1yaOqCTZgWUOx3y4_G9trJqiOBiuMf_3c","mode":"list","cachedResultName":"n8n Analytics","cachedResultUrl":"https://drive.google.com/drive/folders/1yaOqCTZgWUOx3y4_G9trJqiOBiuMf_3c"},"event":"fileCreated","options":{}},"type":"n8n-nodes-base.googleDriveTrigger","typeVersion":1,"position":[-1740,60],"id":"0a2c6f9b-aa2a-45b1-92db-1e92800ad76d","name":"Google Drive Trigger","credentials":{"googleDriveOAuth2Api":{"id":"3VzmfL5shCfEf9cg","name":"Google Drive account 2"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-320,220],"id":"7041bf5c-42eb-44b1-913f-740127cd8082","name":"Extract from File"},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-760,240],"id":"426687be-a640-4de4-96b8-778fbb639bcb","name":"Google Drive","credentials":{"googleDriveOAuth2Api":{"id":"3VzmfL5shCfEf9cg","name":"Google Drive account 2"}}},{"parameters":{"mode":"combine","fieldsToMatchString":"Email","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[0,-20],"id":"0f9833b8-e580-44b1-9d63-8362fa9cfcec","name":"Merge","alwaysOutputData":true},{"parameters":{"operation":"create","documentId":{"__rl":true,"value":"1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M","mode":"list","cachedResultName":"Slack User to Company Mapping","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M/edit?usp=drivesdk"},"title":"={{ $now.format('yyyy-MM-dd') }}","options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1160,760],"id":"5fe608ba-1847-4fe8-a9e4-9739e42af3f5","name":"Create new Tab","credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"method":"POST","url":"=https://sheets.googleapis.com/v4/spreadsheets/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M:batchUpdate","authentication":"predefinedCredentialType","nodeCredentialType":"googleSheetsOAuth2Api","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"{\n  \"requests\": [\n    {\n      \"insertDimension\": {\n        \"range\": {\n          \"sheetId\": 0,\n          \"dimension\": \"COLUMNS\",\n          \"startIndex\": 3,\n          \"endIndex\": 5\n        },\n        \"inheritFromBefore\": false\n      }\n    }\n  ]\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[740,780],"id":"b19109bc-bf25-455c-bea6-b5e7e6af13e7","name":"Add Two columns","executeOnce":true,"credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"method":"PUT","url":"=https://sheets.googleapis.com/v4/spreadsheets/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M/values/Sheet1!D1:E1?valueInputOption=RAW","authentication":"predefinedCredentialType","nodeCredentialType":"googleSheetsOAuth2Api","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"range\": \"Sheet1!D1:E1\",\n  \"majorDimension\": \"ROWS\",\n  \"values\": [\n    [\n      \"Days Active | {{ $now.format('yyyy-MM-dd') }}\",\n      \"Messages posted | {{ $now.format('yyyy-MM-dd') }}\"\n    ]\n  ]\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[940,780],"id":"ed856126-b578-4a64-82e6-3b3e21e604cc","name":"Add Two columns1","executeOnce":true,"credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"jsCode":"// 1) Grab every merged item (array of 230 user objects, etc.)\nconst mergedItems = $input.all();\n\n// 2) Build a 2D array of values: [ [Name, Email, Company, DaysActive, MessagesPosted], … ]\nconst values = mergedItems.map(item => [\n  item.json[\"Name\"] || \"\",\n  item.json[\"Email\"] || \"\",\n  item.json[\"Company as in Notion\"] || \"\",\n  item.json[\"Days active\"] || \"0\",\n  item.json[\"Messages posted\"] || \"0\",\n]);\n\n// 3) Compute today’s date in YYYY-MM-DD format\nconst today = new Date;  // e.g. \"2025-06-06\"\n\n// 4) Derive the tabName you want (for example \"DailySnapshot_2025-06-06\")\nconst tabName = `DailySnapshot_${today}`;\n\n// 5) Fetch the spreadsheetId. Adjust this to point at wherever you stored it.\n//    In this example, we assume that the first merged item has a field named \"spreadsheetId\".\n//    If you keep it somewhere else (environment variable, separate node, etc.), update accordingly.\nconst spreadsheetId = mergedItems.length\n  ? mergedItems[0].json.spreadsheetId\n  : \"$('Create Variables').first().json['SpreasheetID to Edit']\";\n\n// 6) Return exactly one output item containing everything downstream nodes will need:\nreturn [\n  {\n    json: {\n      values,\n      spreadsheetId,\n      tabName,\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[760,960],"id":"ce3d9f93-a9f9-4deb-8af4-e29409c6621c","name":"Code"},{"parameters":{"method":"POST","url":"=https://sheets.googleapis.com/v4/spreadsheets/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M:batchUpdate","authentication":"predefinedCredentialType","nodeCredentialType":"googleSheetsOAuth2Api","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"requests\": [\n    {\n      \"addSheet\": {\n        \"properties\": {\n          \"title\": \"WeeklySnapshot_{{ $json.message.content }}\",\n          \"gridProperties\": {\n            \"rowCount\": 2000,\n            \"columnCount\": 10\n          }\n        }\n      }\n    }\n  ]\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-940,-20],"id":"e3686815-183c-441d-bcee-2a4dbe290c58","name":"Create New sheet","executeOnce":true,"credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"assignments":{"assignments":[{"id":"af979fb5-ad85-4a7e-a87d-e25498f7e620","name":"Email","value":"={{ $json.Email }}","type":"string"},{"id":"f692b427-2203-4331-b5ef-3e689927a26b","name":"Company as in Notion","value":"={{ $json['Company as in Notion'] }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-280,-80],"id":"b17349b8-77d2-422b-b265-5013f5471d16","name":"Create Variables"},{"parameters":{"method":"PUT","url":"=https://sheets.googleapis.com/v4/spreadsheets/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M/values/{{ $json.replies[0].addSheet.properties.title }}!A1:E1?valueInputOption=RAW","authentication":"predefinedCredentialType","nodeCredentialType":"googleSheetsOAuth2Api","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"range\": \"{{ $json.replies[0].addSheet.properties.title }}!A1:E1\",\n  \"majorDimension\": \"ROWS\",\n  \"values\": [\n    [\n      \"Name\",\n      \"Email\",\n      \"Company as in Notion\",\n      \"Days Active | {{ $now.format('MM-dd-yyyy') }}\",\n      \"Messages posted | {{ $now.format('MM-dd-yyyy') }}\"\n    ]\n  ]\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-720,-60],"id":"2fdefb68-1d00-438f-ba6f-860f0f42f142","name":"Add Headers to New Sheet","executeOnce":true,"credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"method":"PUT","url":"=https://sheets.googleapis.com/v4/spreadsheets/{{ $('Create New sheet').item.json.spreadsheetId }}/values/{{ $('Create New sheet').item.json.replies[0].addSheet.properties.title }}!A2:E?valueInputOption=RAW","authentication":"predefinedCredentialType","nodeCredentialType":"googleSheetsOAuth2Api","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"range\": \"{{ $('Create New sheet').item.json.replies[0].addSheet.properties.title }}!A2:E\",\n  \"majorDimension\": \"ROWS\",\n  \"values\": {{ $('Code').item.json.values }}\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1140,960],"id":"41af537f-3b95-41d0-a54a-21c17aa1e183","name":"Write New Data to Sheet","executeOnce":true,"credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"documentId":{"__rl":true,"value":"1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M","mode":"list","cachedResultName":"Slack User to Company Mapping","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1mmVcdIyaz-jfaRseG97pFPeh1OVeT9T11p87k31oG5M/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-480,-80],"id":"c2ad5b59-5ae2-4e19-a12a-622f91c3abe5","name":"Reads Slack Google Sheet","credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"={{ $('Create New sheet').item.json.spreadsheetId }}","mode":"id"},"sheetName":{"__rl":true,"value":"={{ $('Create New sheet').item.json.replies[0].addSheet.properties.sheetId }}","mode":"id"},"columns":{"mappingMode":"defineBelow","value":{"Name":"={{ $json.Name }}","Email":"={{ $json.Email }}","Company as in Notion":"={{ $json['Company as in Notion'] }}","Days Active | 06-06-2025":"={{ $json['Days active'] }}","Messages posted | 06-06-2025":"={{ $json['Messages posted'] }}"},"matchingColumns":[],"schema":[{"id":"Name","displayName":"Name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Email","displayName":"Email","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Company as in Notion","displayName":"Company as in Notion","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Days Active | 06-06-2025","displayName":"Days Active | 06-06-2025","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Messages posted | 06-06-2025","displayName":"Messages posted | 06-06-2025","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[380,-20],"id":"469e54e8-88a7-4815-853e-ac6d077473b8","name":"Writes All Combined Data","credentials":{"googleSheetsOAuth2Api":{"id":"tkvcRmLfYi38x0mC","name":"Google Sheets account"}}},{"parameters":{"modelId":{"__rl":true,"value":"chatgpt-4o-latest","mode":"list","cachedResultName":"CHATGPT-4O-LATEST"},"messages":{"values":[{"content":"=output a the date range from this title:\n\ntitle:  {{ $json.name }}\n\nOutput the date range in the following format: MM-dd-yy - MM-dd-yy\n\nONLY OUT PUT THE DATE FORMAT AND NOTHING ELSE"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-1440,-40],"id":"523ec6ed-7ac0-410c-95aa-c442a690b47f","name":"Pull Date from Slack Analytic","credentials":{"openAiApi":{"id":"wWUuB0CG0kTKBAtS","name":"OpenAi account | Lean Marketing"}}},{"parameters":{"jsCode":"// 1) Pull in all incoming items as plain JSON\nconst rows = $input.all().map(item => item.json);\n\n// 2) Locate the dynamic \"Days Active\" field (e.g. \"Days Active | 06-06-2025\")\nconst dayKey = Object.keys(rows[0]).find(k => k.startsWith('Days Active')) || 'Days Active';\n\n// 3) Filter out any row with days ≤ 0\nconst positiveRows = rows.filter(row => {\n  const days = parseInt(row[dayKey].replace(/\\D/g, ''), 10) || 0;\n  return days > 0;\n});\n\n// 4) Reduce into a map: company → { days: <number>, row: <object> }\nconst bestPerCompany = positiveRows.reduce((acc, row) => {\n  const company = row['Company as in Notion'];\n  const days = parseInt(row[dayKey].replace(/\\D/g,''), 10);\n\n  // if unseen or this one has more days, keep it\n  if (!acc[company] || days > acc[company].days) {\n    acc[company] = { days, row };\n  }\n  return acc;\n}, {});\n\n// 5) Build your output array of just the winning rows\nconst output = Object.values(bestPerCompany).map(({ row }) => ({ json: row }));\n\n// 6) Return so downstream nodes see each as one item\nreturn output;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[700,-20],"id":"753fca42-d5ee-4fcd-a78d-3af0c5a6c45d","name":"Select Most Active User per Company"}],"connections":{"When clicking ‘Test workflow’":{"main":[[]]},"Google Drive Trigger":{"main":[[{"node":"Google Drive","type":"main","index":0},{"node":"Pull Date from Slack Analytic","type":"main","index":0}]]},"Google Drive":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Writes All Combined Data","type":"main","index":0}]]},"Create new Tab":{"main":[[]]},"Add Two columns":{"main":[[{"node":"Add Two columns1","type":"main","index":0}]]},"Add Two columns1":{"main":[[]]},"Code":{"main":[[]]},"Create New sheet":{"main":[[{"node":"Add Headers to New Sheet","type":"main","index":0}]]},"Create Variables":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Add Headers to New Sheet":{"main":[[{"node":"Reads Slack Google Sheet","type":"main","index":0}]]},"Reads Slack Google Sheet":{"main":[[{"node":"Create Variables","type":"main","index":0}]]},"Writes All Combined Data":{"main":[[{"node":"Select Most Active User per Company","type":"main","index":0}]]},"Pull Date from Slack Analytic":{"main":[[{"node":"Create New sheet","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","callerPolicy":"workflowsFromSameOwner","errorWorkflow":"Say8YWSN0KVBjGyp"},"staticData":{"node:Google Drive Trigger":{"lastTimeChecked":"2025-09-24T22:20:50Z"}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"5de45dd8-003d-4e50-a4c2-9918ee917e35","triggerCount":1,"shared":[{"createdAt":"2025-05-09T22:31:30.129Z","updatedAt":"2025-05-09T22:31:30.129Z","role":"workflow:owner","workflowId":"6c8MH371z5fJsIkN","projectId":"oeHwV8sNrbPNhUov"}],"tags":[]}